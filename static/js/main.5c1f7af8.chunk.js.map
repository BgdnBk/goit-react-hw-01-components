{"version":3,"sources":["components/profile-social/profile.module.css","components/statistic/statistic.module.css","components/FriendList/friends.module.css","components/transactionHistory/transaction.module.css","components/profile-social/profile.js","components/statistic/Statistik.js","components/statistic/statisticsList.js","components/FriendList/FriendListItem.js","components/FriendList/FriendList.js","components/transactionHistory/TransactionHistory.js","components/transactionHistory/TransactionList.js","App.js","reportWebVitals.js","index.js"],"names":["module","exports","Painting","name","tag","location","avatar","followers","views","likes","className","s","profile","src","alt","stats","liStyles","label","Statistics","item","style","backgroundColor","random","percentage","Math","floor","StatisticList","items","statistics","title","statList","map","id","FriendsItem","isOnline","online","offline","width","FriendList","friends","friendList","friend","TransactionHistory","type","amount","currency","TransactionList","transactionHistory","App","user","statisticalData","friendsDate","TransactionDate","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5c1f7af8.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile_profile__3fenc\",\"avatar\":\"profile_avatar__1EkS-\",\"name\":\"profile_name__2-qk4\",\"tag\":\"profile_tag__1yT-X\",\"location\":\"profile_location__vA6tR\",\"stats\":\"profile_stats__1em9b\",\"liStyles\":\"profile_liStyles__T3BO4\",\"label\":\"profile_label__Kl9ex\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"statistics\":\"statistic_statistics__2_tm4\",\"title\":\"statistic_title__YCYz2\",\"statList\":\"statistic_statList__1snxt\",\"item\":\"statistic_item__3AzBX\",\"label\":\"statistic_label__34RBP\",\"percentage\":\"statistic_percentage__2kX1A\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"friendList\":\"friends_friendList__3AFc2\",\"item\":\"friends_item__1vRJm\",\"online\":\"friends_online__1iUwf\",\"offline\":\"friends_offline__CsODQ\",\"avatar\":\"friends_avatar__c_hdl\",\"name\":\"friends_name__3Knz8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"transactionHistory\":\"transaction_transactionHistory__2q3w-\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from '../profile-social/profile.module.css';\n\nexport default function Painting({\n  name,\n  tag,\n  location,\n  avatar,\n  followers,\n  views,\n  likes,\n}) {\n  return (\n    <div className={s.profile}>\n      <div className=\"description\">\n        <img src={avatar} alt={name} className={s.avatar} />\n        <p className={s.name}>{name}</p>\n        <p className={s.tag}>@{tag}</p>\n        <p className={s.location}>{location}</p>\n      </div>\n\n      <ul className={s.stats}>\n        <li className={s.liStyles}>\n          <span className={s.label}>Followers</span>\n          <span className=\"quantity\">{followers}</span>\n        </li>\n        <li className={s.liStyles}>\n          <span className={s.label}>Views</span>\n          <span className=\"quantity\">{views}</span>\n        </li>\n        <li className={s.liStyles}>\n          <span className={s.label}>Likes</span>\n          <span className=\"quantity\">{likes}</span>\n        </li>\n      </ul>\n    </div>\n  );\n}\n\nPainting.propTypes = {\n  name: PropTypes.string.isRequired,\n  tag: PropTypes.string.isRequired,\n  location: PropTypes.string.isRequired,\n  avatar: PropTypes.string.isRequired,\n  followers: PropTypes.number.isRequired,\n  views: PropTypes.number.isRequired,\n  likes: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './statistic.module.css';\n\nexport default function Statistics({ label = '', stats }) {\n  return (\n    <li\n      className={s.item}\n      style={{\n        backgroundColor: `rgba( ${random()} , ${random()} , ${random()} )`,\n      }}\n    >\n      <span className={s.label}>{label}</span>\n      <span className={s.percentage}> {stats}%</span>\n    </li>\n  );\n}\n\nfunction random() {\n  return Math.floor(Math.random() * 256);\n}\n\nStatistics.propTypes = {\n  label: PropTypes.string,\n  stats: PropTypes.number.isRequired,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport Statistik from './Statistik';\nimport s from './statistic.module.css';\n\nfunction StatisticList({ items }) {\n  return (\n    <section className={s.statistics}>\n      <h2 className={s.title}>UPLOAD STATS</h2>\n      <ul className={s.statList}>\n        {items.map(item => (\n          <Statistik key={item.id} label={item.label} stats={item.percentage} />\n        ))}\n      </ul>\n    </section>\n  );\n}\n\nexport default StatisticList;\n\nStatisticList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './friends.module.css';\n\nexport default function FriendsItem({ avatar, name, isOnline }) {\n  return (\n    <li className={s.item}>\n      <span className={isOnline ? s.online : s.offline}></span>\n      <img className={s.avatar} src={avatar} alt={name} width=\"48\" />\n      <p className={s.name}>{name}</p>\n    </li>\n  );\n}\n\nFriendsItem.propTypes = {\n  avatar: PropTypes.string,\n  name: PropTypes.string,\n  isOnline: PropTypes.bool,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport FriendListItem from './FriendListItem';\nimport s from './friends.module.css';\n\nexport default function FriendList({ friends }) {\n  return (\n    <ul className={s.friendList}>\n      {friends.map(friend => (\n        <FriendListItem\n          key={friend.id}\n          avatar={friend.avatar}\n          name={friend.name}\n          isOnline={friend.isOnline}\n        />\n      ))}\n    </ul>\n  );\n}\n\nFriendList.propTypes = {\n  friends: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './transaction.module.css';\n\nexport default function TransactionHistory({ type, amount, currency }) {\n  return (\n    <tbody>\n      <tr className={s.item}>\n        <td className={s.type}>{type}</td>\n        <td className={s.amount}>{amount}</td>\n        <td className={s.currency}>{currency}</td>\n      </tr>\n    </tbody>\n  );\n}\n\nTransactionHistory.propTypes = {\n  type: PropTypes.string,\n  amount: PropTypes.string,\n  currency: PropTypes.string,\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport TransactionHistory from './TransactionHistory';\nimport s from './transaction.module.css';\n\nexport default function TransactionList({ items }) {\n  return (\n    <table className={s.transactionHistory}>\n      <thead>\n        <tr>\n          <th>Type</th>\n          <th>Amount</th>\n          <th>Currency</th>\n        </tr>\n      </thead>\n      {items.map(item => (\n        <TransactionHistory\n          key={item.id}\n          type={item.type}\n          amount={item.amount}\n          currency={item.currency}\n        />\n      ))}\n    </table>\n  );\n}\n\nTransactionList.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n    }),\n  ),\n};\n","import React from 'react';\nimport Painting from './components/profile-social/profile';\nimport user from './user.json';\nimport StatisticsList from './components/statistic/statisticsList';\nimport statisticalData from './statistical-data.json';\nimport FriendList from './components/FriendList/FriendList';\nimport friendsDate from './friends.json';\nimport TransactionList from './components/transactionHistory/TransactionList';\nimport TransactionDate from './transactions.json';\n\nexport default function App() {\n  return (\n    <div>\n      <Painting\n        name={user.name}\n        tag={user.tag}\n        location={user.location}\n        avatar={user.avatar}\n        followers={user.stats.followers}\n        views={user.stats.views}\n        likes={user.stats.likes}\n      />\n      <StatisticsList items={statisticalData} />\n      <FriendList friends={friendsDate} />\n      <TransactionList items={TransactionDate} />\n    </div>\n  );\n}\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}